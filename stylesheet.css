@import url("https://fonts.googleapis.com/css?family=Open+sans:300,400,600,700,800&display=swap");
/*---resetando o html e o body--*/
html,
body {
  margin: 0;
  padding: 0;
  box-sizing: 0;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  font-family: "Open Sans", sans-serif;
}
:root {
  --color-first: #72ccc0;
  --font-first: "Source Sans";
}

header {
  background: #fff;
  display: flex;
  justify-content: center;
  width: 100%;
  position: fixed;
}

spam {
  color: var(--color-first);
}

.topo {
  display: flex;
  width: 1024px;
  justify-content: space-between;
  align-items: center;
  text-transform: uppercase;
  padding: 20px;
}
.topo a {
  color: rgb(83, 81, 81);
  display: inline-block;
  text-decoration: none;
  padding-right: 2vh;
}

.banner {
  background-image: url(/Imagens/img-banner3.jpg);
  background-size: cover;
  background-attachment: fixed;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}
.container1 {
  background: #72ccc080;
  color: #fff;
  width: 800px;
  height: 200px;
  margin: 0px;
  border: 1px solid #fff;
  border-radius: 10px;
  /*padding: 50px 0px 80px 200px;*/
}
.container1 h1 {
  font-weight: bold;
  font-size: 3em;
  text-align: center;
}
.container1 p {
  font-weight: bold;
  font-size: 1em;
  text-align: center;
}
.title-page h2 {
  font-weight: bold;
  font-size: 3em;
  text-align: center;
  color: var(--color-first);
  margin-top: 80px;
  text-transform: uppercase;
}
.title-page p {
  font-size: 1.2em;
  text-align: center;
}
.conteudo {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
  margin-top: 80px;
}
.conteudo a img {
  display: flex;
  width: 500px;
}
.card {
  text-align: center;
  border-bottom: 5px solid var(--color-first);
}
.card a {
  text-decoration: none;
  color: rgb(83, 81, 81);
  font-weight: bold;
}
.container2 {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}
.container2 .card2 {
  display: flex;
  width: 80vh;
  flex-direction: row;
  justify-content: space-between;
  flex-basis: auto;
  padding: 20px;
}
.container2 .card2 img {
  width: 200px;
  height: 200px;
}

footer {
  background: var(--color-first);
  display: flex;
  color: #fff;
  justify-content: center;
  margin-top: 50px;
}

footer a {
  text-decoration: none;
  color: #fff;
  display: flex;
}
footer img {
  display: flex;
  width: 40px;
  height: 40px;
  padding-right: 2vh;
}
footer h4 {
  font-weight: bold;
  font-size: 1.3em;
}
.container3 {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  width: 150vh;
  margin-top: 10px;
  border-bottom: 2px solid #fff;
}
.copy {
  display: flex;
  justify-content: center;
  align-items: center;
}

/*  Notas
    
    Outras maneira de usar o grid column
    grid-column: 1/3;
    grid-column-start: 1;
    grid-column-end:3;
    
  
---- Alinhamento ------

                Dimensões do grid:

O eixo x é o posicionamento horizontal, da esquerda para a direita.

O eixo y é o posicionamento vertical, de cima para baixo.


* justify-content e align-content nos permite alinhar o próprio grid, relativo ao espaço fora do grid.

* justify-items e align-items vai permitir alinhar os items do nosso grid,
 em qualquer espaço disponivel, na célula que ele habitar.

* justify-self e align-self vai nos permitir alinhar o item em si,
faz a mesma coisa que o justify-items e align-items, porém,aplicado
diretamente no item de um grid

    */
